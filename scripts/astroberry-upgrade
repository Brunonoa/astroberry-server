#!/bin/bash
#
# astroberry wlan0 configuration script
# Author: Radek Kaczorek, rkaczorek AT gmail DOT com
# License: GPL 3.0

latest=1.0.3

if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root"
   exit 1
fi

DL=$(which wget)
GIT=$(which git)

if [ -z "$DL" ]; then
   echo "You need to install wget to use this script."
   exit 1
fi

if [ -z "$GIT" ]; then
   echo "You need to install git to use this script."
   exit 1
fi

function 1.0.1 {
   echo "Upgrading to version 1.0.2..."

   # remove old phd2
   echo "Updating PHD2..."
   rm -rf /home/astroberry/Desktop/PHD2.desktop
   rm -rf /home/astroberry/.local/share/applications/mozo-made.desktop
   rm -rf /opt/phd2

   # add phd2 from repo
   add-apt-repository -y ppa:pch/phd2 > /dev/null 2>&1
   apt-get update > /dev/null
   apt-get -y install phd2 phdlogview > /dev/null

   cat >> /home/astroberry/Desktop/PHD2.desktop << EOF
[Desktop Entry]
Version=1.0
Encoding=UTF-8
Name=PHD2
Comment=PHD Guiding, auto-guiding of your telescope
Exec=phd2
Icon=phd2
Terminal=false
Type=Application
Categories=Education;Science;Astronomy
GenericName=PHD2
EOF

   chown astroberry.astroberry /home/astroberry/Desktop/PHD2.desktop
   chmod 755 /home/astroberry/Desktop/PHD2.desktop

   cat >> /usr/share/applications/phd2viewer.desktop << EOF
[Desktop Entry]
Version=1.0
Encoding=UTF-8
Name=PHD2 Log Viewer
Comment=PHD2 Log Viewer
Exec=phdlogview
Icon=phd2
Terminal=false
Type=Application
Categories=Education;Science;Astronomy
GenericName=PHD2 Log Viewer
EOF

   # fix phd name
   sed -i "s/Name=phd2/Name=PHD2/g" /usr/share/applications/phd2.desktop
   sed -i "s/GenericName=phd2/GenericName=PHD2/g" /usr/share/applications/phd2.desktop

   # change hostname
   echo "Fixing hostname..."
   sed -i "s/^astroberry$/astroberry.local/g" /etc/hostname

   # change hosts
   sed -i "s/^127.0.1.1\tastroberry$/127.0.1.1\tastroberry.local astroberry/g" /etc/hosts

   # update novnc configuration
   echo "Updating noVNC..."
   rm -rf /opt/noVNC/self.pem
   $DL -P /opt/noVNC/ -N -q https://github.com/rkaczorek/noVNC/raw/master/astroberry.crt
   $DL -P /opt/noVNC/ -N -q https://github.com/rkaczorek/noVNC/raw/master/server.pem
   sed -i "s/--ssl-only/--ssl-only --cert \/opt\/noVNC\/server.pem/g" /etc/systemd/system/novnc.service
   systemctl daemon-reload > /dev/null
   systemctl restart novnc.service > /dev/null

   # update own packages
   echo "Updating custom packages..."
   $DL -P /tmp/ -N -q https://github.com/rkaczorek/astroberry-piface/raw/master/binaries/astroberry-piface_2.0.2-2_armhf.deb
   $DL -P /tmp/ -N -q https://github.com/rkaczorek/astroberry-piface-cad/raw/master/binaries/astroberry-piface-cad_2.0.0-1_armhf.deb
   $DL -P /tmp/ -N -q https://github.com/rkaczorek/astroberry-altimu/raw/master/binaries/astroberry-altimu_1.1.0-1_armhf.deb
   $DL -P /tmp/ -N -q https://github.com/rkaczorek/indi-jolohub/raw/master/binaries/indi-jolohub_0.2.0-1_armhf.deb
   dpkg -i /tmp/astroberry-piface_2.0.2-2_armhf.deb > /dev/null
   dpkg -i /tmp/astroberry-piface-cad_2.0.0-1_armhf.deb > /dev/null
   dpkg -i /tmp/astroberry-altimu_1.1.0-1_armhf.deb > /dev/null
   dpkg -i /tmp/indi-jolohub_0.2.0-1_armhf.deb > /dev/null
   rm -rf /tmp/astroberry-piface_2.0.2-2_armhf.deb
   rm -rf /tmp/astroberry-piface-cad_2.0.0-1_armhf.deb
   rm -rf /tmp/astroberry-altimu_1.1.0-1_armhf.deb
   rm -rf /tmp/indi-jolohub_0.2.0-1_armhf.deb

   # install planetary imager
   echo "Installing Planetary Imager..."
   apt-get -y install libopencv-highgui2.4v5 > /dev/null
   $DL -P /tmp/ -N -q https://github.com/rkaczorek/astroberry-server/raw/master/aliens/PlanetaryImager-0.6.2-Linux-armv7_ubuntu-16.04.deb
   dpkg --force overwrite -i /tmp/PlanetaryImager-0.6.2-Linux-armv7_ubuntu-16.04.deb > /dev/null
   rm -rf /tmp/PlanetaryImager-0.6.2-Linux-armv7_ubuntu-16.04.deb
   sed -i "s/Categories=Science;Graphics/Categories=Education;Science;Astronomy/g" /usr/share/applications/planetary_imager.desktop
   cat >> /home/astroberry/Desktop/planetary_imager.desktop << EOF
[Desktop Entry]
Type=Application
Version=0.6.2
Name=Planetary Imager
Comment=Astronomy Planetary Imager, designed for speed and usability
Exec=planetary_imager
Icon=/usr/share/icons/hicolor/32x32/apps/planetary_imager.png
Terminal=false
Categories=Education;Science;Astronomy
GenericName=Planetary Imager
EOF

   chown astroberry.astroberry /home/astroberry/Desktop/planetary_imager.desktop
   chmod 755 /home/astroberry/Desktop/planetary_imager.desktop

   # set new version
   version=1.0.2
   echo "Your system has been upgraded to version $version"
   sed -i "s/>Version 1.0</>Version 1.0.1</g" /opt/noVNC/index.html
   sed -i "s/>Version 1.0.1</>Version 1.0.2</g" /opt/noVNC/index.html
   echo "$version" > /etc/astroberry.version
   if [ "$version" == "$latest" ]; then
      echo "Your system is up to date."
      exit 0
   else
      "$version"
   fi
}

function 1.0.2 {
   echo "Upgrading to version 1.0.3..."

   # upgrade planetryimager
   echo "Updating Planetary Imager..."
   apt-get -y install libccfits0v5 libqt5opengl5 > /dev/null
   dpkg -r planetaryimager > /dev/null
   $DL -P /tmp/ -N -q https://github.com/rkaczorek/astroberry-server/raw/master/aliens/planetaryimager.tgz
   tar zxvf /tmp/planetaryimager.tgz -C /tmp > /dev/null
   cp -R /tmp/planetaryimager/usr /
   rm -rf /tmp/planetaryimager/usr
   rm -rf /tmp/planetaryimager.tgz
   cp /usr/share/applications/planetary_imager.desktop /home/astroberry/Desktop/planetary_imager.desktop
   chown astroberry.astroberry /home/astroberry/Desktop/planetary_imager.desktop
   chmod 775 /home/astroberry/Desktop/planetary_imager.desktop

   # install skychart / cartes du ciel
   echo "Installing Skychart/Cartes du Ciel..."
   apt-get -y install libglu1-mesa xplanet xplanet-images > /dev/null
   $DL -P /tmp/ -N -q https://github.com/rkaczorek/astroberry-server/raw/master/aliens/libpasastro_1.1-15_armhf.deb
   dpkg -i /tmp/libpasastro_1.1-15_armhf.deb > /dev/null
   $DL -P /tmp/ -N -q https://github.com/rkaczorek/astroberry-server/raw/master/aliens/skychart_4.0-3575b_armhf.deb
   dpkg -i /tmp/skychart_4.0-3575b_armhf.deb > /dev/null
   rm -rf /tmp/libpasastro_1.1-15_armhf.deb
   rm -rf /tmp/skychart_4.0-3575b_armhf.deb

   # install webmanager
   echo "Installing INDI Web Manager..."
   apt-get -y install python-requests python-psutil python-bottle > /dev/null
   $GIT clone -q https://github.com/rkaczorek/indiwebmanager.git /tmp/indiwebmanager
   cp -R /tmp/indiwebmanager/servermanager /opt/
   rm -rf /tmp/indiwebmanager
   chown astroberry.astroberry -R /opt/servermanager
   cat >> /etc/systemd/system/indiwebmanager.service << EOF
[Unit]
Description=INDI Web Manager
After=multi-user.target
 
[Service]
Type=idle
User=astroberry
ExecStart=/usr/bin/python /opt/servermanager/drivermanager.py
ExecStartPost=/usr/bin/python /opt/servermanager/autostart.py
Restart=always
RestartSec=5
 
[Install]
WantedBy=multi-user.target
EOF

   chown root.root /etc/systemd/system/indiwebmanager.service
   chmod 644 /etc/systemd/system/indiwebmanager.service
   systemctl daemon-reload > /dev/null
   sudo systemctl enable indiwebmanager.service > /dev/null
   systemctl start indiwebmanager.service > /dev/null

   # update noVNC and setup nginx reverse proxy
   echo "Updating noNVC..."
   apt-get -y install nginx > /dev/null
   systemctl enable nginx > /dev/null
   cat >> /etc/nginx/sites-available/astroberry << EOF
upstream novnc {
    server 127.0.0.1:8080;
}
 
upstream indiwebmanager {
    server 127.0.0.1:8624;
}
 
server {
    listen 443;
 
    ssl_certificate           /opt/noVNC/server.pem;
    ssl_certificate_key       /opt/noVNC/server.pem;
 
    ssl on;
    ssl_session_cache  builtin:1000  shared:SSL:10m;
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;
 
    location /websockify {
          proxy_http_version 1.1;
          proxy_pass http://novnc/;
          proxy_set_header Upgrade \$http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_read_timeout 90;
          proxy_buffering off;
    }
 
    location /desktop/ {
       proxy_http_version  1.1;
       proxy_pass          http://novnc/;
       proxy_set_header    Upgrade \$http_upgrade;
       proxy_set_header    Connection "upgrade";
    }
 
    location /webmanager/ {
       proxy_http_version  1.1;
       proxy_pass          http://indiwebmanager/;
       proxy_set_header    Upgrade \$http_upgrade;
       proxy_set_header    Connection "upgrade";
       proxy_read_timeout  90;
       proxy_buffering     off;
    }
 
    location /static/ {
       proxy_http_version  1.1;
       proxy_pass          http://indiwebmanager/static/;
       proxy_set_header    Upgrade \$http_upgrade;
       proxy_set_header    Connection "upgrade";
    }
 
    location /api/ {
       proxy_http_version  1.1;
       proxy_pass          http://indiwebmanager/api/;
       proxy_set_header    Upgrade \$http_upgrade;
       proxy_set_header    Connection "upgrade";
    }
 
}
EOF

   ln -s /etc/nginx/sites-available/astroberry /etc/nginx/sites-enabled/
   $GIT clone -q https://github.com/rkaczorek/noVNC.git /tmp/noVNC
   systemctl stop novnc.service
   cp -R /tmp/noVNC /opt/
   rm -rf /tmp/noVNC
   chown astroberry.astroberry -R /opt/noVNC
   sed -i "s/--listen 443 --ssl-only --cert \/opt\/noVNC\/server.pem/--listen 8080/g" /etc/systemd/system/novnc.service
   systemctl daemon-reload > /dev/null
   systemctl start novnc.service > /dev/null

   # welcome page
   echo "Setting up welcome page..."
   ln -s /opt/noVNC/astroberry.crt /var/www/html/
   ln -s /opt/noVNC/app/images/background.jpg /var/www/html/
   ln -s /opt/noVNC/app/styles/adequate.extra-light.ttf /var/www/html/
   ln -s /opt/servermanager/views/img/indi_logo.png /var/www/html/
   $DL -P /var/www/html/ -N -q https://www.raspberrypi.org/app/uploads/2012/03/raspberry-pi-logo.png
   $DL -P /var/www/html/ -N -q http://design.ubuntu.com/wp-content/uploads/ubuntu-logo14.png
   $DL -P /var/www/html/ -N -q https://github.com/novnc/noVNC/raw/master/app/images/icons/novnc-48x48.png

   cat >> /var/www/html/index.html << EOF
<!DOCTYPE html>
<html>
<head>
<title>Welcome to Astroberry Server!</title>
<style>
@font-face {font-family: 'Adequate Extra Light';font-style: normal;src: local('?'), url('adequate.extra-light.ttf') format('truetype');}
body {margin:0;padding:0;background-image: url("background.jpg");background-repeat:no-repeat;background-position: center -63px;font-family: 'Adequate Extra Light', Arial, Helvetica;color: #fff;}
html {height:100%;}
#welcome {display: block;background-color: rgba(0, 0, 0, 0.6);width: 50%;margin: 100px auto;border: 1px #333 solid;border-radius: 10px;padding: 20px;}
a {color: #fff;font-weight: bold;text-decoration: none;}
a:visited {color: #fff;font-weight: bold;text-decoration: none;}
img {margin-right: 15px;}
</style>
</head>
<body>
<div id="welcome">
<h1>Welcome to Astroberry Server!</h1>
<p>Astroberry Server is a ready to use astronomy desktop system for Raspberry Pi 3<br>It is a standalone system for controlling astronomy equipment supported by INDI server.</p>
<p>To get started follow the instructions below:</p>
<ul>
<li>Install and trust security certificate in your browser by clicking <a href="./astroberry.crt">this link</a></li>
<li>Go to <a href="https://astroberry.local/desktop/">Astroberry Server</a> or <a href="https://192.168.10.1/desktop/">https://192.168.10.1/desktop/</a></li>
<li>Connect to a wireless network by clicking WLAN icon on top taskbar (optional)
<li>Enjoy!
</ul>
<div>
<a style="display:inline-block;vertical-align:top;margin:20px 10px 0 0;font-weight:normal;">Powered by</a>
<a href="https://www.raspberrypi.org/" target="_blank"><img src="raspberry-pi-logo.png" width="5%" height="5%" /></a>
<a href="https://www.ubuntu.com/" target="_blank"><img src="ubuntu-logo14.png" width="10%" height="10%" /></a>
<a href="http://indilib.org/" target="_blank"><img src="indi_logo.png" width="5%" height="5%" /></a>
<a href="https://kanaka.github.io/noVNC/" target="_blank"><img src="novnc-48x48.png" width="5%" height="5%" /></a>
<a style="display:inline-block;float:right;margin:50px 0 0 0;font-size:0.6em;font-weight:normal;" href="https://github.com/rkaczorek/astroberry-server" target="_blank">Project site</a>
</div>
</div>
</body>
</html>
EOF

   cat >> /etc/nginx/sites-available/default << EOF
server {
	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;
	ssl_certificate /opt/noVNC/server.pem;
	ssl_certificate_key /opt/noVNC/server.pem;
	root /var/www/html;
}
EOF

   systemctl restart nginx > /dev/null

   # set new version
   version=1.0.3
   echo "Your system has been upgraded to version $version"
   echo "From now on visit http://astroberry.local to access welcome page and https://astroberry.local/desktop/ to access Astroberry Server"
   sed -i "s/>Version 1.0.2</>Version 1.0.3</g" /opt/noVNC/index.html
   echo "$version" > /etc/astroberry.version
   if [ "$version" == "$latest" ]; then
      echo "Your system is up to date."
      exit 0
   else
      "$version"
   fi
}

function 1.0.3 {
   echo "Upgrading to version 1.0.4..."
   # set new version
   version=1.0.4
   echo "Your system has been upgraded to version $version"
   sed -i "s/>Version 1.0.3</>Version 1.0.4</g" /opt/noVNC/index.html
   echo "$version" > /etc/astroberry.version
   if [ "$version" == "$latest" ]; then
      echo "Your system is up to date."
      exit 0
   else
      "$version"
   fi
}

if [ -f /etc/astroberry.version ]; then
   version=$(cat /etc/astroberry.version)
else
   version=1.0.1
fi

if [ "$version" == "$latest" ]; then
   echo "Your system is up to date."
   exit 0
else
   echo "Your system version is $version and the latest version is $latest"
   read -p "Do you want to upgrade your system (y/n)? " upg
   if [ "$upg" != "y" ]; then
      exit 0
   fi
   "$version"
fi
